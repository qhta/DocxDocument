<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocxDocument.ReadWrite.Test</name>
    </assembly>
    <members>
        <member name="T:DocxDocument.ReadWrite.Test.TestBackground">
            <summary>
            Test class for document Background part.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBackground.TestReadBackground">
            <summary>
            Tests the Background read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBackground.TestReadBackground(System.String,System.Boolean)">
            <summary>
            Tests the Background read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBackground.TestReadBackgroundXmlSerialization">
            <summary>
            Tests the Background read from all Background*.docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBackground.TestReadBackgroundXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests Background Xml serialization by reading a specified file,
            serialize and deserialize Background using string writer.
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestBase">
            <summary>
            Base class for all test.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.Setup">
            <summary>
            Setups the test path. Can be overriden in descendant classes.
            </summary>
        </member>
        <member name="P:DocxDocument.ReadWrite.Test.TestBase.TestPath">
            <summary>
            Gets or sets the test path that is used to read/write test data files.
            </summary>
            <value>
            The test path.
            </value>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.GetTestFilenames(System.String)">
            <summary>
            Collects and returns the list of document files in the <paramref name="testPath"/>"/>.
            All *.docx, *.dotx and *.dotm files are collected.
            </summary>
            <returns>
            List of full filenames.
            </returns>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.WriteLine(System.String)">
            <summary>
            Writes the line to debug output window and test explorer output window.
            </summary>
            <param name="str">Line of text. Can be empty</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.ShowObject(System.String,System.Object,System.Int32)">
            <summary>
            Dumps the object to text explorer progress window.
            </summary>
            <param name="heading">A heading line to write.</param>
            <param name="value">The object to dump.</param>
            <param name="indent">The indent of text.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.ShowEnumerable(System.String,System.Collections.IEnumerable,System.Type,System.Int32)">
            <summary>
            Dumps the enumerable collection to test explorer output window.
            </summary>
            <param name="heading">A heading line to write.</param>
            <param name="value">Collection to dump.</param>
            <param name="itemType">Type of the collection item.</param>
            <param name="indent">The indent of text</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.ShowEnumerable(System.Collections.IEnumerable,System.Type,System.Int32)">
            <summary>
            Dumps the enumerable collection to test explorer output window.
            </summary>
            <param name="value">Collection to dump.</param>
            <param name="itemType">Type of the collection item.</param>
            <param name="indent">The indent of text</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.UnzipFile(System.String)">
            <summary>
            Unpacks file package to filename.unzip folder.
            </summary>
            <param name="filename">Full package filename to unpack.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.TestDirectories(System.String,System.String,System.Boolean)">
            <summary>
            Tests if two directory structures are the same.
            </summary>
            <param name="origDirectory">Original directory to compare.</param>
            <param name="newDirectory">New directory to compare.</param>
            <param name="showDetails">Whether to show comparison details</param>
            <returns></returns>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.CompareDirectories(System.String,System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
             Compares two directory structures.
            </summary>
            <param name="origDirectory">Original directory to compare.</param>
            <param name="newDirectory">New directory to compare.</param>
            <param name="missingFiles">Files existing in original directory that do not exist in new directory.</param>
            <param name="excessiveFiles">Files existing in new directory that do not exist in original directory.</param>
            <returns></returns>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.InternalCompareDirectories(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
             Recursive implementation of two directories comparing.
            </summary>
            <param name="origDirectory">Original directory to compare.</param>
            <param name="newDirectory">New directory to compare.</param>
            <param name="missingFiles">Files existing in original directory that do not exist in new directory.</param>
            <param name="excessiveFiles">Files existing in new directory that do not exist in original directory.</param>
            <returns></returns>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.CompareDirectories(System.String,System.String,System.Boolean)">
            <summary>
             Compares files in directory structures.
            </summary>
            <param name="origDirectory">Original directory to compare.</param>
            <param name="newDirectory">New directory to compare.</param>
            <param name="showDetails">Whether to show comparison details</param>
            <returns></returns>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.CompareFiles(System.String,System.String,System.Boolean)">
            <summary>
             Compares pair of files.
            </summary>
            <param name="origFilePath">Original file to compare.</param>
            <param name="newFilePath">New file to compare.</param>
            <param name="showDetails">Whether to show comparison details</param>
            <returns></returns>
        </member>
        <member name="F:DocxDocument.ReadWrite.Test.TestBase.Rnd">
            <summary>
            Random generator
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.RandomDateTime">
            <summary>
            Helper method to generate random date-time value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBase.CreateWordprocessingDocument(System.String)">
            <summary>
            Creates empty wordprocessing document
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestBody">
            <summary>
            Test class for document paragraphs.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBody.TestReadDocumentBody">
            <summary>
            Tests paragraphs read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBody.TestReadDocumentBody(System.String,System.Boolean)">
            <summary>
            Tests body read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBody.TestReadBodyXmlSerialization">
            <summary>
            Tests body Xml serialization by reading all docx files in folder specified by test path.,
            serialize and deserialize body using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBody.TestReadBodyXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests body Xml serialization by reading specifed docx file,
            serialize and deserialize body using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBody.TestReadBodyJsonSerialization">
            <summary>
            Tests body Json serialization by reading all docx files in folder specified by test path.,
            serialize and deserialize body using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestBody.TestReadBodyJsonSerialization(System.String)">
            <summary>
            Tests body Json serialization by reading specifed docx file,
            serialize and deserialize body using string writer.
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestComments">
            <summary>
            Test class for document comments.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestComments.TestNormalTemplateComments">
            <summary>
            Tests the normal template comments.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestComments.TestReadDocumentComments">
            <summary>
            Tests the comments read from "Comments.docx" file.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestComments.TestReadComments">
            <summary>
            Tests the comments read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestComments.TestReadComments(System.String,System.Boolean)">
            <summary>
            Tests the comments read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestComments.TestReadCommentsXmlSerialization">
            <summary>
            Tests comments Xml serialization by reading files,
            serialize and deserialize comments using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestComments.TestReadCommentsXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests comments Xml serialization by reading file,
            serialize and deserialize comments using string writer.
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestConverters">
            <summary>
            Test class for DocxDocument.OpenXml base converters.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestEnumValueConverter">
            <summary>
            Test of the enum value converter.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexIntConverter">
            <summary>
            Test of the hex-int value converter.
            Tests all docx files in the folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexIntConverter(System.String,System.Boolean)">
            <summary>
            Test of the hex-int value converter based on the specified docx file.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexIntConverterOfExtendendProperties(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Tests the hex-int converter of extendend document properties (Rsids).
            </summary>
            <param name="wordprocessingDocument">The wordprocessing document.</param>
            <param name="showDetails">if set to <c>true</c> [show details].</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexIntConverterOfNumberingDefinitions(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Tests the hex-int converter of document numbering definitions.
            </summary>
            <param name="wordprocessingDocument">The wordprocessing document.</param>
            <param name="showDetails">if set to <c>true</c> [show details].</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexBinaryConverter">
            <summary>
            Test of the hexadecimal binary converter.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexBinaryConverter(System.Boolean)">
            <summary>
            Test of the hexadecimal binary converter.
            Tests all docx files in the folder specified by test path.
            </summary>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.FindHexBinaryGetTypes">
            <summary>
            Helper method to find all the types that have properties of HexBinaryValue type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexBinaryConverter(System.String,System.Boolean)">
            <summary>
            Test of the hexadecimal binary converter using a specified docx file.
            </summary>
            <param name="filename">The filename of docx to test.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexBinaryConverterInFontTable(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Test of the hexadecimal binary converter working in document font table.
            Tests Panose1Number and FondSignature components.
            </summary>
            <param name="wordprocessingDocument">The wordprocessing document to test.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestConverters.TestHexBinaryConverterInParagraphs(DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Test of the hexadecimal binary converter working in document paragraphs.
            Tests paragpraph Rsid*, ParagraphId and TextId properties.
            </summary>
            <param name="wordprocessingDocument">The wordprocessing document to test.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestFonts">
            <summary>
            Test class for document font table.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestNormalTemplateFonts">
            <summary>
            Tests the normal template fonts.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadFonts">
            <summary>
            Tests the fonts read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadFonts(System.String,System.Boolean)">
            <summary>
            Tests the fonts read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadEmbedFonts">
            <summary>
            Tests embed fonts read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadEmbedFonts(System.String,System.Boolean)">
            <summary>
            Tests embed fonts read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadFontsXmlSerialization">
            <summary>
            Tests fonts Xml serialization by reading files,
            serialize and deserialize fonts using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadFontsXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests fonts Xml serialization by reading file,
            serialize and deserialize fonts using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadEmbedFontsXmlSerialization">
            <summary>
            Tests embed fonts Xml serialization by reading files,
            serialize and deserialize fonts using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestFonts.TestReadEmbedFontsXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests fonts Xml serialization by reading file,
            serialize and deserialize fonts using string writer.
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestNumbering">
            <summary>
            Test class for document numbering.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestNumbering.TestReadNumbering">
            <summary>
            Tests the numbering read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestNumbering.TestReadNumbering(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tests the numbering read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
            <param name="copyBack">Specifies whether test document should be copied back and modified with deserialized data</param>
            <param name="openWord">Specifies that new document should be opened in MS Word</param>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestProperties">
            <summary>
            Test of the document properties.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="P:DocxDocument.ReadWrite.Test.TestProperties.statisticPropElementsNames">
            <summary>
            Names of the extended properties that are treated as statistic properties.
            </summary>
        </member>
        <member name="P:DocxDocument.ReadWrite.Test.TestProperties.extraPropElementsNames">
            <summary>
            Names of the xml elements that are used over Office version 2007.
            </summary>
        </member>
        <member name="P:DocxDocument.ReadWrite.Test.TestProperties.settingsPropertiesElementsNames">
            <summary>
            Names of the xml elements that are stored in the document settings part, but belong to document properies.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.TestReadProperties">
            <summary>
            Tests the document properties read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.TestReadProperties(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tests the document properties read from all docx files in folder specified by test path.
            </summary>
            <param name="showDetails">Specifies whether test details should be shown.</param>
            <param name="copyBack">Specifies whether test document should be copied back and modified with deserialized data</param>
            <param name="openWord">Specifies that new document should be opened in MS Word</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.TestReadProperties(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tests the document properties read from the file
            </summary>
            <param name="filename">The filename.</param>
            <param name="showDetails">Specifies whether test details should be shown.</param>
            <param name="copyBack">Specifies whether test document should be copied back and modified with deserialized data</param>
            <param name="openWord">Specifies that new document should be opened in MS Word</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.CheckReadCoreDocumentProperties(DocumentModel.Wordprocessing.Document,DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Checks whether the core document properties read from the file are equal to origin ones.
            </summary>
            <param name="modelDocument">Model document read from docx file.</param>
            <param name="origDocument">The original document.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.CheckReadExtendedDocumentProperties(DocumentModel.Wordprocessing.Document,DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Checks whether the extended document properties (content and statistic) read from the file are equal to origin ones.
            </summary>
            <param name="modelDocument">Model document read from docx fils.</param>
            <param name="origDocument">The original document.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.CheckReadCustomDocumentProperties(DocumentModel.Wordprocessing.Document,DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Checks whether the custom document properties read from the file are equal to origin ones.
            </summary>
            <param name="modelDocument">Model document read from docx fils.</param>
            <param name="origDocument">The original document.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.CheckReadDocumentSettings(DocumentModel.Wordprocessing.Document,DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Checks whether the document settings read from the file are equal to origin ones.
            </summary>
            <param name="modelDocument">Model document read from docx fils.</param>
            <param name="origDocument">The original document.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.CheckReadWebSettings(DocumentModel.Wordprocessing.Document,DocumentFormat.OpenXml.Packaging.WordprocessingDocument,System.Boolean)">
            <summary>
            Checks whether the web settings read from the file are equal to origin ones.
            </summary>
            <param name="modelDocument">Model document read from docx fils.</param>
            <param name="origDocument">The original document.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.TestGenProperties(System.String,System.Boolean,System.Boolean)">
            <summary>
            Tests generation of properties
            </summary>
            <param name="filename">The filename.</param>
            <param name="showDetails">Specifies if test details should be shown.</param>
            <param name="openWord">Specifies that new document should be opened in MS Word</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.GenerateCoreDocumentProperties(DocumentModel.Wordprocessing.Document,System.Boolean)">
            <summary>
            Generate core document properties.
            </summary>
            <param name="modelDocument">New model document.</param>
            <param name="showDetails">Specifies whether to show generated properties</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.GenerateContentDocumentProperties(DocumentModel.Wordprocessing.Document,System.Boolean)">
            <summary>
            Generate content document properties.
            </summary>
            <param name="modelDocument">New model document.</param>
            <param name="showDetails">Specifies whether to show generated properties</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.GenerateStatisticDocumentProperties(DocumentModel.Wordprocessing.Document,System.Boolean)">
            <summary>
            Generate statistic document properties.
            </summary>
            <param name="modelDocument">New model document.</param>
            <param name="showDetails">Specifies whether to show generated properties</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.GenerateDocumentSettings(DocumentModel.Wordprocessing.Document,System.Boolean)">
            <summary>
            Generate document settings.
            </summary>
            <param name="modelDocument">New model document.</param>
            <param name="showDetails">Specifies whether to show generated properties</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestProperties.GenerateWebSettings(DocumentModel.Wordprocessing.Document,System.Boolean)">
            <summary>
            Generate document settings.
            </summary>
            <param name="modelDocument">New model document.</param>
            <param name="showDetails">Specifies whether to show generated properties</param>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestSections">
            <summary>
            Test class for document sections.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestSections.TestReadSections">
            <summary>
            Tests sections read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestSections.TestReadSections(System.String,System.Boolean)">
            <summary>
            Tests read sections from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestSections.TestReadSectionsXmlSerialization">
            <summary>
            Tests sections Xml serialization by reading all docx files in folder specified by test path.,
            serialize and deserialize body using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestSections.TestReadSectionsXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests body Xml serialization by reading specifed docx file,
            serialize and deserialize body using string writer.
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestStyles">
            <summary>
            Test class for document style definition part.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.TestReadNormalTemplateStyles">
            <summary>
            Tests the normal template styles.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.TestReadStyles">
            <summary>
            Tests the style definitions read from all docx files in folder specified by test path.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.TestReadStyles(System.String,System.Boolean)">
            <summary>
            Tests the style definitions read from the specified docx file.
            </summary>
            <param name="filename">The filename of the document to read.</param>
            <param name="showDetails">Specifies whether the detailed information on test should be shown on test failure.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.TestLatentStyleDefaults(DocumentModel.Wordprocessing.LatentStyles,DocumentFormat.OpenXml.Wordprocessing.LatentStyles)">
            <summary>
            Helper method to check whether read latent styles defaults are same as origin ones.
            </summary>
            <param name="modelLatentStyles">The model latent styles defaults.</param>
            <param name="origLatentStyles">The original latent styles defaults.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.CheckReadDocDefaults(DocumentModel.Wordprocessing.DocDefaults,DocumentFormat.OpenXml.Wordprocessing.DocDefaults)">
            <summary>
            Helper method to check whether read document defaults are same as origin ones.
            </summary>
            <param name="modelDocDefaults">The model document defaults.</param>
            <param name="origDocDefaults">The original document defaults.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.CheckParagraphPropertiesDefault(DocumentModel.Wordprocessing.DefaultParagraphProperties,DocumentFormat.OpenXml.Wordprocessing.ParagraphPropertiesDefault)">
            <summary>
            Helper method to check whether read document default paragraph properties are same as origin ones.
            </summary>
            <param name="modelParPropsDefaults">The model default paragraph properties.</param>
            <param name="origParPropsDefaults">The original default paragraph properties.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.CheckRunPropertiesDefault(DocumentModel.Wordprocessing.DefaultRunProperties,DocumentFormat.OpenXml.Wordprocessing.RunPropertiesDefault)">
            <summary>
            Helper method to check whether read document default run text properties are same as origin ones.
            </summary>
            <param name="modelRunPropsDefaults">The model default run properties.</param>
            <param name="origRunPropsDefaults">The original default run properties.</param>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.TestReadStylesXmlSerialization">
            <summary>
            Tests styles Xml serialization by reading files,
            serialize and deserialize styles using string writer.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestStyles.TestReadStylesXmlSerialization(System.String,System.Boolean)">
            <summary>
            Tests styles Xml serialization by reading file,
            serialize and deserialize numbering using string writer.
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestTheme">
            <summary>
            Test class for document theme part.
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestTheme.TestReadTheme">
            <summary>
            Tests the theme read from all docx files in folder specified by test path.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DocxDocument.ReadWrite.Test.TestTheme.TestReadTheme(System.String,System.Boolean,System.Boolean,System.Boolean)" -->
        <member name="T:DocxDocument.ReadWrite.Test.Numbers">
            <summary>
            TestNumbers for variants
            </summary>
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.RGB">
            <summary>
            Test struct for variants
            </summary>
            <seealso cref="T:System.IConvertible" />
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.RGBTypeConverter">
            <summary>
            Type converter for RGB test struct needed for serialization
            </summary>
            <seealso cref="T:System.ComponentModel.TypeConverter" />
        </member>
        <member name="T:DocxDocument.ReadWrite.Test.TestVariants">
            <summary>
            Test class for variants
            </summary>
            <seealso cref="T:DocxDocument.ReadWrite.Test.TestBase" />
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestBooleanVariantType">
            <summary>
            Test of the boolean variant type. 
            Tests conversion between boolean value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestByteVariantType">
            <summary>
            Test of the byte variant type. 
            Tests conversion between byte value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestSByteVariantType">
            <summary>
            Test of the signed byte variant type. 
            Tests conversion between signed byte value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestInt16VariantType">
            <summary>
            Test of the int16 variant type. 
            Tests conversion between signed 16-bit integer value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestUInt16VariantType">
            <summary>
            Test of the uint16 variant type. 
            Tests conversion between unsigned 16-bit integer value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestInt32VariantType">
            <summary>
            Test of the int32 variant type. 
            Tests conversion between signed 32-bit integer value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestUInt32VariantType">
            <summary>
            Test of the uint32 variant type. 
            Tests conversion between unsigned 32-bit integer value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestInt64VariantType">
            <summary>
            Test of the int64 variant type. 
            Tests conversion between signed 64-bit integer value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestUInt64VariantType">
            <summary>
            Test of the uint64 variant type. 
            Tests conversion between unsigned 32-bit integer value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestDecimalVariantType">
            <summary>
            Test of the decimal variant type. 
            Tests conversion between decimal value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestSingleVariantType">
            <summary>
            Test of the single variant type. 
            Tests conversion between single precision floating-point value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestDoubleVariantType">
            <summary>
            Test of the double variant type. 
            Tests conversion between double precision floating-point value and other number types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestDateTimeVariantType">
            <summary>
            Test of the date-time variant type. 
            Tests conversion between DateTime value and date only type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestBlobVariantType">
            <summary>
            Test of the blob variant type. 
            Tests conversion between binary large object block value and string type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestGuidVariantType">
            <summary>
            Test of the GUID variant type. 
            Tests conversion between GUID value and other (string and BLOB) types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestCharVariantType">
            <summary>
            Test of the char variant type. 
            Tests conversion between char value and other (string and int) types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestErrorVariantType">
            <summary>
            Test of the error code variant type. 
            Tests conversion between error code value and other (string and int) types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestEnumVariantType">
            <summary>
            Test of the enum variant type. 
            Tests conversion between enum value and other (int, uint32/64 and string) types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestObjectVariantType">
            <summary>
            Test of the object variant type. 
            Tests conversion between RGB struct value and uint32 type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestInternalVariantType">
            <summary>
            Test of the internal variant type. 
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestVectorVariantType">
            <summary>
            Test of the vector variant type. 
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestArrayVariantType">
            <summary>
            Test of the array variant type. 
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestVariantXmlSerialization">
            <summary>
            Test of the variant XML serialization. Tests all variant types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestVariantXmlSerialization(System.Nullable{DocumentModel.VariantType},System.Boolean)">
            <summary>
            Test of the variant XML serialization. Tests all variant types with optional details.
            Dummy parameter is needed to make test function similar to TestVectorXmlSerialization
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestVariantXmlSerialization(DocumentModel.VariantType,System.Boolean)">
            <summary>
            Test of the variant XML serialization. Tests the specified variant type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestVectorXmlSerialization">
            <summary>
            Test of the vector variant XML serialization. Tests all variant types.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestVectorXmlSerialization(System.Nullable{DocumentModel.VariantType},System.Boolean)">
            <summary>
            Test of the vector variant XML serialization. Tests the specified variant type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestArrayVariantXmlSerialization">
            <summary>
            Test of the array variant XML serialization. Tests the specified variant type.
            </summary>
        </member>
        <member name="M:DocxDocument.ReadWrite.Test.TestVariants.TestArrayVariantXmlSerialization(DocumentModel.VariantType)">
            <summary>
            Test of the array variant XML serialization. Tests all variant types.
            </summary>
        </member>
    </members>
</doc>
